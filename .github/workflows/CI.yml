name: CI


on: [push, pull_request]


jobs:
  ##############################################################################
  # ubuntu with gcc
  ##############################################################################
  ubuntu-gcc:
    name: Ubuntu GCC (x10)

    runs-on: ubuntu-latest

    env:
      MAKE: "make -j --output-sync=target"
      CC: "gcc"
      CFLAGS: "-Wall"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup"
        run: |
          sudo apt install -y libgmp-dev
          sudo apt install -y libmpfr-dev
          sudo apt install -y autoconf
          sudo apt install -y libtool-bin
          gcc --version
          make --version
          autoconf --version
          libtool --version

      - name: "Configure"
        run: |
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}"

      - name: "Compile"
        run: |
          $MAKE
          ldd libflint.so

      - name: "Check"
        run: |
          export FLINT_TEST_MULTIPLIER=10
          $MAKE check

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  ##############################################################################
  # ubuntu with gcc (assert)
  ##############################################################################
  ubuntu-gcc-assert:
    name: Ubuntu GCC (assert, x2)

    runs-on: ubuntu-latest

    env:
      MAKE: "make -j --output-sync=target"
      CC: "gcc"
      CFLAGS: "-Wall"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup"
        run: |
          sudo apt install -y libgmp-dev
          sudo apt install -y libmpfr-dev
          sudo apt install -y autoconf
          sudo apt install -y libtool-bin
          gcc --version
          make --version
          autoconf --version
          libtool --version

      - name: "Configure"
        run: |
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}" --with-gmp=/usr --with-mpfr=/usr --enable-assert --disable-static

      - name: "Compile"
        run: |
          $MAKE
          ldd libflint.so

      - name: "Check"
        run: |
          export FLINT_TEST_MULTIPLIER=2
          $MAKE check

          # FIXME: Enable when this won't fail
      # - if: failure()
      #   name: "If failure, stop all other jobs"
      #   uses: andymckay/cancel-action@0.2



  ##############################################################################
  # macos with gcc
  ##############################################################################
  macos-gcc:
    name: macOS GCC (x3)

    runs-on: macos-latest

    env:
      MAKE: "gmake -j --output-sync=target"
      CFLAGS: "-Wall"
      EXTRA_OPTIONS: "--disable-static --enable-shared"
      CC: "gcc"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup"
        run: |
          brew install gcc
          brew install make
          brew install gmp
          brew install mpfr
          brew install autoconf
          brew install libtool
          brew install automake
          gcc --version
          gmake --version
          autoconf --version

      - name: "Configure"
        run: |
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}" --with-gmp=$(brew --prefix) \
              --with-mpfr=$(brew --prefix) ${EXTRA_OPTIONS}

      - name: "Compile"
        run: |
          $MAKE

      - name: "Check"
        run: |
          export FLINT_TEST_MULTIPLIER=3
          $MAKE check

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  ##############################################################################
  # freebsd with clang
  ##############################################################################
  freebsd-gcc:
    name: FreeBSD Clang (x0.5)

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "Set up FreeBSD"
        uses: cross-platform-actions/action@v0.10.0
        with:
          operating_system: freebsd
          version: '13.1'
          shell: bash
          run: |
            yes | sudo pkg install gmake
            yes | sudo pkg install gmp
            yes | sudo pkg install mpfr
            yes | sudo pkg install autoconf
            yes | sudo pkg install libtool
            yes | sudo pkg install automake
            gmake --version
            clang --version
            autoconf --version
            libtool --version
            export FLINT_TEST_MULTIPLIER=0.5
            ./bootstrap.sh
            ./configure CC=clang CFLAGS="-Wall" --disable-static --enable-shared
            gmake -j
            gmake -j check

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  ##############################################################################
  # cygwin with gcc
  ##############################################################################
  cygwin-gcc:
    name: Cygwin GCC (x1)

    runs-on: windows-latest

    defaults:
      run:
        shell: C:\cygwin64\bin\bash.exe --login -o igncr '{0}'

    env:
      MAKE: "make -j --output-sync=target"
      REPO: /cygdrive/d/a/flint2/flint2 # FIXME: De-hardcode this
      CFLAGS: "-Wall"
      EXTRA_OPTIONS: "--enable-shared --disable-static"
      CC: "gcc"

    steps:
      - uses: actions/checkout@v3

      - name: "Set up Cygwin"
        uses: gap-actions/setup-cygwin@v1
        with:
          PKGS_TO_INSTALL: "dos2unix,gcc-core,make,libgmp-devel,libmpfr-devel,libtool,autoconf,automake"

      - name: "Setup"
        run: |
          gcc --version
          make --version
          autoconf --version
          libtool --version

      - name: "Configure"
        run: |
          cd ${REPO}
          dos2unix configure
          dos2unix bootstrap.sh
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}" ${EXTRA_OPTIONS}

      - name: "Compile"
        run: |
          cd ${REPO}
          ${MAKE}

      - name: "Check"
        run: |
          cd ${REPO}
          export FLINT_TEST_MULTIPLIER=1
          $MAKE check

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  #############################################################################
  # ubuntu with clang
  #############################################################################
  ubuntu-clang:
    name: Ubuntu Clang (x5)

    runs-on: ubuntu-latest

    env:
      MAKE: "make -j --output-sync=target"
      LOCAL: ${{ github.workspace }}/local
      LDFLAGS: "-Wl,-rpath,$LOCAL/lib"
      CFLAGS: "-Wall"
      CC: "clang"
      EXTRA_OPTIONS: "--disable-static --enable-shared"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup"
        run: |
          sudo apt install -y libgmp-dev
          sudo apt install -y libmpfr-dev
          sudo apt install -y autoconf
          sudo apt install -y libtool-bin
          clang --version
          make --version
          autoconf --version
          libtool --version

      - name: "Configure"
        run: |
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}" ${EXTRA_OPTIONS}

      - name: "Compile"
        run: |
          $MAKE
          ldd libflint.so

      - name: "Check"
        run: |
          export FLINT_TEST_MULTIPLIER=5
          $MAKE check

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  #############################################################################
  # ubuntu with gcc and cmake (no checks)
  #############################################################################
  ubuntu-cmake-gcc:
    name: Ubuntu GCC via CMake (no check)

    runs-on: ubuntu-latest

    env:
      MAKE: "make -j --output-sync=target"
      LOCAL: ${{ github.workspace }}/local
      LDFLAGS: "-Wl,-rpath,$LOCAL/lib"
      CFLAGS: "-Wall"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup"
        run: |
          sudo apt install -y cmake
          sudo apt install -y libgmp-dev
          sudo apt install -y libmpfr-dev
          gcc --version
          make --version
          cmake --version

      - name: "Configure"
        run: |
          mkdir build
          cd build
          cmake -G"Unix Makefiles" -DWITH_NTL=no -DBUILD_TESTING=yes \
              -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${LOCAL} ..

      - name: "Compile"
        run: |
          cd build
          $MAKE
          ldd lib/libflint.so

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  #############################################################################
  # mingw with gcc
  #############################################################################
  mingw64-gcc:
    name: MinGW GCC (x0.5)

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    env:
      MAKE: "make -j --output-sync=target"
      CFLAGS: "-Wall"
      EXTRA_OPTIONS: "--enable-shared --disable-static"
      CC: "gcc"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup MinGW"
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-autotools

      - name: "Setup"
        run: |
          gcc --version
          make --version
          autoconf --version
          libtool --version

      - name: "Configure"
        run: |
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}" ${EXTRA_OPTIONS}

      - name: "Compile"
        run: |
          ${MAKE}

      - name: "Check"
        run: |
          export FLINT_TEST_MULTIPLIER=0.5
          ${MAKE} check

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2



  ##############################################################################
  # nemo
  ##############################################################################
  nemo:
    name: Nemo.jl

    runs-on: ubuntu-latest

    env:
      MAKE: "make -j --output-sync=target"
      LOCAL: ${{ github.workspace }}/local
      CFLAGS: ""
      EXTRA_OPTIONS: "--disable-static --enable-shared"
      CC: "gcc"

    steps:
      - uses: actions/checkout@v3

      - name: "Setup"
        run: |
          sudo apt install -y sed
          sudo apt install -y libgmp-dev
          sudo apt install -y libmpfr-dev
          sudo apt install -y autoconf
          sudo apt install -y libtool-bin
          gcc --version
          make --version
          autoconf --version
          libtool --version
          julia --version

      - name: "Configure"
        run: |
          # Make sure that we output an soname which corresponds to FLINT_JLL's
          # soname
          wget https://raw.githubusercontent.com/JuliaPackaging/Yggdrasil/master/F/FLINT/build_tarballs.jl
          FLINT_JLL_VERSION=$(grep "upstream_version =" build_tarballs.jl | sed "s/upstream_version = v\"\([0-9\.]*\)\"/\1/")
          FLINT_JLL_SONAME=$(grep "$FLINT_JLL_VERSION => " configure.ac | sed "s/# $FLINT_JLL_VERSION => \([0-9\.]\+\)/\1/")
          FLINT_JLL_MAJOR=$(echo $FLINT_JLL_SONAME | sed "s/\([0-9]\+\)\.[0-9]\+\.[0-9]\+/\1/")
          FLINT_JLL_MINOR=$(echo $FLINT_JLL_SONAME | sed "s/[0-9]\+\.\([0-9]\+\)\.[0-9]\+/\1/")
          FLINT_JLL_PATCH=$(echo $FLINT_JLL_SONAME | sed "s/[0-9]\+\.[0-9]\+\.\([0-9]\+\)/\1/")
          sed -i "s/^\(FLINT_MAJOR_SO=\)[0-9]\+/\1$FLINT_JLL_MAJOR/" configure.ac
          sed -i "s/^\(FLINT_MINOR_SO=\)[0-9]\+/\1$FLINT_JLL_MINOR/" configure.ac
          sed -i "s/^\(FLINT_PATCH_SO=\)[0-9]\+/\1$FLINT_JLL_PATCH/" configure.ac

          # Now we can create the makefile
          ./bootstrap.sh
          ./configure CC=${CC} CFLAGS="${CFLAGS}" --prefix=${LOCAL} ${EXTRA_OPTIONS}

      - name: "Compile and install"
        run: |
          $MAKE
          $MAKE install

      - name: "Set up Nemo.jl"
        run: |
          # Override FLINT_jll's libflint with ours
          git clone https://github.com/Nemocas/Nemo.jl.git
          julia -e "import Pkg; Pkg.develop(path=\"./Nemo.jl\");"
          echo -e "[e134572f-a0d5-539d-bddf-3cad8db41a82]\nFLINT = \"${LOCAL}\"" > ~/.julia/artifacts/Overrides.toml
          touch Nemo.jl/src/Nemo.jl
          julia -e "using Nemo; println(\"Path to Nemo's libflint:\", Nemo.libflint)"

      - name: "Check Nemo.jl"
        run: |
          julia -e "import Pkg; Pkg.test(\"Nemo\")"

      - if: failure()
        name: "If failure, stop all other jobs"
        uses: andymckay/cancel-action@0.2
